<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Main_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="データ一致判定" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_CsvData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_ExcelData" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="list_CommonItems" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Result" />
    </Sequence.Variables>
    <ui:ReadCsvFile DataTable="[dt_CsvData]" Delimitator="Comma" DisplayName="CSV を読み込む" Encoding="shift_jis" FilePath="test_data\csv.csv" sap2010:WorkflowViewState.IdRef="ReadCsvFile_1" />
    <ui:ReadRange AddHeaders="True" DataTable="[dt_ExcelData]" DisplayName="Excel 範囲を読み込み" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Sheet1" WorkbookPath="test_data\excel.xlsx">
      <ui:ReadRange.Range>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </ui:ReadRange.Range>
    </ui:ReadRange>
    <Sequence DisplayName="共通項目名取得　シーケンス" sap2010:WorkflowViewState.IdRef="Sequence_1">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Int32" Name="int_LoopCount" />
      </Sequence.Variables>
      <Assign DisplayName="繰返し回数定義　代入" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[int_LoopCount]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">0</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="共通項目格納変数　代入" sap2010:WorkflowViewState.IdRef="Assign_3">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(x:String)">[list_CommonItems]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(x:String)">[new list(of string)]</InArgument>
        </Assign.Value>
      </Assign>
      <While DisplayName="Csvの列名　繰り返し (前判定)" sap2010:WorkflowViewState.IdRef="While_1" Condition="[int_LoopCount &lt; dt_CsvData.Columns.Count]">
        <Sequence DisplayName="シーケンス" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="str_CsvColumnName" />
          </Sequence.Variables>
          <Assign DisplayName="列名取得　代入" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[str_CsvColumnName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[dt_CsvData.Columns(int_LoopCount).ColumnName.ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[dt_ExcelData.Columns.Contains(str_CsvColumnName)]" DisplayName="条件分岐" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Then>
              <AddToCollection x:TypeArguments="x:String" Collection="[list_CommonItems]" DisplayName="コレクションに追加" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[str_CsvColumnName]" />
            </If.Then>
          </If>
          <Assign DisplayName="代入" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[int_LoopCount]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[int_LoopCount +1]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </While>
      <ui:LogMessage DisplayName="メッセージをログ" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[string.Format(&quot;共通項目は【{0}】です。&quot;,String.Join(&quot;,&quot;,list_CommonItems.ToArray()))]" />
    </Sequence>
    <Sequence DisplayName="一致判定" sap2010:WorkflowViewState.IdRef="Sequence_5">
      <ui:BuildDataTable DataTable="[dt_Result]" DisplayName="判定結果格納　データテーブルを構築" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xD;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xD;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xD;&#xA;      &lt;xs:complexType&gt;&#xD;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xD;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xD;&#xA;            &lt;xs:complexType&gt;&#xD;&#xA;              &lt;xs:sequence&gt;&#xD;&#xA;                &lt;xs:element name=&quot;項目名&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;判定結果&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Csvデータ&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Excelデータ&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;              &lt;/xs:sequence&gt;&#xD;&#xA;            &lt;/xs:complexType&gt;&#xD;&#xA;          &lt;/xs:element&gt;&#xD;&#xA;        &lt;/xs:choice&gt;&#xD;&#xA;      &lt;/xs:complexType&gt;&#xD;&#xA;    &lt;/xs:element&gt;&#xD;&#xA;  &lt;/xs:schema&gt;&#xD;&#xA;&lt;/NewDataSet&gt;" />
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="繰り返し (コレクションの各要素)" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[list_CommonItems]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="item" />
            </ActivityAction.Argument>
            <Sequence DisplayName="本体" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <Sequence.Variables>
                <Variable x:TypeArguments="s:Object[]" Name="list_CsvColumn" />
                <Variable x:TypeArguments="s:Object[]" Name="list_ExcelColumn" />
                <Variable x:TypeArguments="x:String" Name="str_CsvColumn" />
                <Variable x:TypeArguments="x:String" Name="str_ExcelColumn" />
                <Variable x:TypeArguments="x:String" Name="str_Check" />
              </Sequence.Variables>
              <Assign DisplayName="CSV指定列データ取得　代入" sap2010:WorkflowViewState.IdRef="Assign_5">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:Object[]">[list_CsvColumn]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:Object[]">[dt_CsvData.AsEnumerable().Select(Function(row) row(item)).ToArray()]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="EXCEL指定列データ取得　代入" sap2010:WorkflowViewState.IdRef="Assign_6">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:Object[]">[list_ExcelColumn]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:Object[]">[dt_ExcelData.AsEnumerable().Select(Function(row) row(item)).ToArray()]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="CSV結果格納用　代入" sap2010:WorkflowViewState.IdRef="Assign_7">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_CsvColumn]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[string.Join(",", list_CsvColumn)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Excel結果格納用　代入" sap2010:WorkflowViewState.IdRef="Assign_8">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_ExcelColumn]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[string.Join(",", list_ExcelColumn)]</InArgument>
                </Assign.Value>
              </Assign>
              <InvokeMethod DisplayName="CSVデータソード　メソッドを呼び出し" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Sort" TargetType="s:Array">
                <InArgument x:TypeArguments="s:Object[]">[list_CsvColumn]</InArgument>
              </InvokeMethod>
              <InvokeMethod DisplayName="Excelソード　メソッドを呼び出し" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Sort" TargetType="s:Array">
                <InArgument x:TypeArguments="s:Object[]">[list_ExcelColumn]</InArgument>
              </InvokeMethod>
              <If Condition="[list_CsvColumn.SequenceEqual(list_ExcelColumn )]" DisplayName="CSVとEXCEL列データ一致判定　条件分岐" sap2010:WorkflowViewState.IdRef="If_2">
                <If.Then>
                  <Sequence DisplayName="シーケンス" sap2010:WorkflowViewState.IdRef="Sequence_6">
                    <Assign DisplayName="代入" sap2010:WorkflowViewState.IdRef="Assign_9">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[str_Check]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">True</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{item,str_Check,str_CsvColumn,str_ExcelColumn}]" DataTable="[dt_Result]" DisplayName="結果データ格納する　データ行を追加" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="シーケンス" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <Assign DisplayName="代入" sap2010:WorkflowViewState.IdRef="Assign_10">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[str_Check]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">False</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{item,str_Check,str_CsvColumn,str_ExcelColumn}]" DataTable="[dt_Result]" DisplayName="結果データ格納する　データ行を追加" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
    </Sequence>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="結果出力　Excel アプリケーションスコープ" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="test_data\check_result.xlsx">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="実行" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt_Result]" DisplayName="範囲に書き込み" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Sheet1" StartingCell="A1" />
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <sads:DebugSymbol.Symbol>dzBDOlx1aXBhdGhfdGVzdFxNYXRjaF9DaGVja1xNYXRjaF9DaGVja1xNYWluLnhhbWxOQgPnAQ4CAQFJBUm+AQIBa0oFUBQCAWVRBYIBEAIBRoMBBdkBEAIBCtoBBeUBIAIBAkljSW4CAW9JH0ktAgFtSXhJiwECAWxKL0o/AgFpTQtNOgIBaEqUAUqcAQIBZ0qqAUrAAQIBZlUHXBACAWFdB2QQAgFdZQeAAQ8CAUqBAQeBAdYBAgFHhAEHhAG3DAIBQ4UBB9gBFAIBC9oBoAHaAb0BAgEJ4AEL4gEWAgEDWjFaMgIBZFcyV0ECAWJiPGJRAgFgXz1fTwIBXmYJfxQCAUxlYmWRAQIBS4EBcYEB0wECAUiEASSEATECAUSFAZsBhQGvAQIBQYsBDdUBGAIBDOEBDeEBvAECAQRqC3EUAgFZcgt2EAIBUncLfhQCAU2TAQ+aARgCAT2bAQ+iARgCATmjAQ+qARgCATSrAQ+yARgCAS+zAQ+1AR4CASy2AQ+4AR4CASm5AQ/UARQCAQ3hAbUB4QG5AQIBCOEBPeEBSgIBBuEBnwHhAacBAgEFbzZvbQIBXGw3bEoCAVpyGXJNAgFTdA90xgECAVR8NXxHAgFQeTZ5RQIBTpgBPJgBgQECAUCVAT2VAU0CAT6gATygAYMBAgE8nQE9nQFPAgE6qAE6qAFcAgE3pQE7pQFKAgE1sAE6sAFeAgEyrQE7rQFMAgEwtAE6tAFKAgEttwE6twFMAgEquQEduQFQAgEOuwETxQEeAgEcyAET0gEeAgEPdEZ0WgIBV3SuAXTDAQIBVbwBFcMBHgIBJcQBFcQB3AECAR3JARXQAR4CARjRARXRAdwBAgEQwQFAwQFEAgEovgFBvgFMAgEmxAF9xAGKAQIBI8QBQMQBcgIBHs4BQM4BRQIBG8sBQcsBTAIBGdEBfdEBigECARbRAUDRAXICARE=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="ReadCsvFile_1" sap:VirtualizedContainerService.HintSize="200,52" />
      <sap2010:ViewStateData Id="ReadRange_1" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="486,532">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BuildDataTable_1" sap:VirtualizedContainerService.HintSize="591,59" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="InvokeMethod_1" sap:VirtualizedContainerService.HintSize="553,132" />
      <sap2010:ViewStateData Id="InvokeMethod_2" sap:VirtualizedContainerService.HintSize="553,132" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddDataRow_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="264,246">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddDataRow_2" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="264,246">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="553,394" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="575,1262">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="591,1396" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteRange_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_1" sap:VirtualizedContainerService.HintSize="200,52" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="222,544">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main_1" sap:VirtualizedContainerService.HintSize="262,624">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
            <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>